{"version":3,"sources":["webpack:///./src/components/Zine.js","webpack:///./src/templates/mdx-post.js","webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js"],"names":["Zine","render","className","to","class","data-gumroad-product-id","href","React","Component","MdxArticle","style","marginBottom","this","props","post","frontmatter","title","display","author","date","note","dangerouslySetInnerHTML","components","SLink","mdx","body","MdxTemplate","data","pageType","type","noHeader","hideFooter","description","image","zine","pageQuery","MDXRenderer","require","module","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","Object","result","Function","call","useMDXComponents","useMDXScope","scope","children","mdxComponents","mdxScope","End","fullScope","keys","values","key","fn"],"mappings":"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","file":"component---src-templates-mdx-post-js-3ec51e3c0b7a2d857d2e.js","sourcesContent":["import React from 'react'\nimport Link from 'gatsby-link'\nimport {MDXRenderer} from \"gatsby-plugin-mdx\";\n\n\nexport default class Zine extends React.Component {\n\n  render() {\n\n    var checkoutImg = 'https://www.paypalobjects.com/webstatic/en_US/i/buttons/checkout-logo-large.png'\n    var payPal = '<form target=\"paypal\" action=\"https://www.paypal.com/cgi-bin/webscr\" method=\"post\" >\\n' +\n      '<input type=\"hidden\" name=\"cmd\" value=\"_cart\">\\n' +\n      '<input type=\"hidden\" name=\"business\" value=\"maxhfowler@gmail.com\">\\n' +\n      '<input type=\"hidden\" name=\"lc\" value=\"AR\">\\n' +\n      '<input type=\"hidden\" name=\"item_name\" value=\"Disconnection Practices\">\\n' +\n      '<input type=\"hidden\" name=\"amount\" value=\"10.00\">\\n' +\n      '<input type=\"hidden\" name=\"currency_code\" value=\"USD\">\\n' +\n      '<input type=\"hidden\" name=\"button_subtype\" value=\"products\">\\n' +\n      '<input type=\"hidden\" name=\"no_note\" value=\"0\">\\n' +\n      '<input type=\"hidden\" name=\"add\" value=\"1\">\\n' +\n      '<input type=\"hidden\" name=\"bn\" value=\"PP-ShopCartBF:btn_cart_LG.gif:NonHostedGuest\">\\n' +\n      `<input type=\"image\" src=\"${checkoutImg}\" border=\"0\" name=\"submit\" alt=\"PayPal - The safer, easier way to pay online!\">\\n` +\n      `<img alt=\"\" border=\"0\" src=\"${checkoutImg}\" width=\"1\" height=\"1\">\\n` +\n      '</form>\\n'\n\n    return (\n      <div className=\"zineWrapper\">\n        <Link className=\"backButton\" to=\"/zines\">‚Üê Back To All Zines</Link>\n        <div className=\"zineDetail\">\n          <div class=\"gumroad-product-embed\" data-gumroad-product-id=\"pgQxJ\"><a href=\"https://gumroad.com/l/pgQxJ\">Loading...</a></div>\n        </div>\n      </div>\n    )\n  }\n}","// src/components/layout.js\nimport React from \"react\"\nimport SLink from \"../components/SLink.js\"\nimport Zine from \"../components/Zine.js\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport { MDXProvider } from '@mdx-js/react'\nimport Layout from \"../layouts/layout.js\";\nimport {Link} from \"gatsby\";\n\n// simple template for testing\n// export default function PageTemplate({ data: { mdx } }) {\n//   return (\n//     <div>\n//       <h1>{mdx.frontmatter.title}</h1>\n//       <MDXProvider components={{\n//             \"SLink\": SLink,\n//             \"Carousel\": Carousel,\n//             \"img\": props => <img {...props} className=\"imgComp\" style={{ border: \"3px solid green\" }} />\n//           }}>\n//           <MDXRenderer >{mdx.body}</MDXRenderer>\n//       </MDXProvider>\n//     </div>\n//   )\n// }\n\nclass MdxArticle extends React.Component {\n  render() {\n    return (\n       <article className={\"markdownWrapper\"}>\n          <div className=\"articleHeader\" style={{'margin-bottom': '20px', 'width': '100%', 'float':'left'}}>\n            <h2\n              style={{\n                marginBottom: 0,\n              }}\n            >\n              {this.props.post.frontmatter.title}\n            </h2>\n            <p\n              style={{\n                display: `block`,\n                'width': '100%',\n                'float': 'left',\n              }}\n            >\n              {this.props.post.frontmatter.author ? <span>{this.props.post.frontmatter.author} &bull;</span> : null } {this.props.post.frontmatter.date}\n            </p>\n            {this.props.post.frontmatter.note ?\n              <p\n                style={{\n                  display: `block`,\n                }}\n                dangerouslySetInnerHTML={{'__html': this.props.post.frontmatter.note}}\n              >\n              </p>\n              : null}\n          </div>\n          <section className=\"mdxWrapper\">\n            <MDXProvider components={{\n                  \"SLink\": SLink,\n                }}>\n                <MDXRenderer >{this.props.mdx.body}</MDXRenderer>\n            </MDXProvider>\n          </section>\n        </article>\n    )\n  }\n}\n\nexport default function MdxTemplate({ data: { mdx  }}) {\n    const post = mdx\n    var pageType = post.frontmatter.type;\n    if (!pageType) {\n      pageType = 'blog;'\n    }\n    var noHeader = false;\n    var hideFooter = false;\n    if (pageType === 'blog') {\n      noHeader = true;\n    }\n    if (pageType === 'zine') {\n      hideFooter = true;\n    }\n    return (\n      <Layout noHeader={noHeader} hideFooter={hideFooter} pageType={pageType} title={post.frontmatter.title} description={post.frontmatter.description} image={post.frontmatter.image}>\n        {(()=> {\n          switch (pageType) {\n            case 'blog':\n                return <MdxArticle post={post} mdx={mdx}></MdxArticle>;\n            case 'zine':\n              return <Zine zine={post.frontmatter} mdx={mdx}></Zine>\n            default:\n              return null;\n          }\n        })()}\n      </Layout>\n  )\n}\nexport const pageQuery = graphql`\n  query BlogPostQuery($id: String) {\n    mdx(id: { eq: $id }) {\n      id\n      body\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n        description\n        author\n        image\n        price\n        type\n      }\n    }\n  }\n`","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n"],"sourceRoot":""}